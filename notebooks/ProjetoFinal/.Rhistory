# RC1 - Vida Social do Aluno
# RC2 - Competências académicas do estudante
# RC3 - Vida Acadêmica do estudante
# RC4 - Motivação do estudante
# RC5 - Condições socioeconomicas do estudante
pc7sc <- principal(data_scaled, nfactors = 13, rotate = "varimax", scores = TRUE)
round(pc7sc$scores,3)
mean(pc7sc$scores[,1])
sd(pc7sc$scores[,1])
pc7sc$scores[,4]
pacman::p_load(
"sjstats", "plotrix", "skimr",
"txtplot", "cluster", "tidyverse",
"caret", "factoextra", "mclust", "htmlTable",
"readr", "naniar", "here", "modeest",
"psych", "corrplot", "haven", "kableExtra",
"haven", "dplyr" , "magrittr", "mice"
)
options(repr.plot.width=6, repr.plot.height=6)
IrlandaImput <- read_rds("IrlandaImput.rds")
colnames(IrlandaImput)
# Por algum motivo, a variável GRADE faz com que o teste KMO dê erro
# Aqui serão apagadas todas as variáveis que, ou podem ser substituidas, ou não tem valor nenhum
Apagar <- c("HISCED", "MISCED", "GRADE", "REPEAT", "ATTLNACT", "FISCED", "DISCLIMA", "IMMIG", "ICTSCH", "JOYREADP", "HISEI")
IrlandaImput <- IrlandaImput[, -which(names(IrlandaImput) %in% Apagar)]
CorrIrlandaImput <- cor(IrlandaImput)
corrplot(CorrIrlandaImput)
#IrlandaImput matrix
round(CorrIrlandaImput, 3)
kmo_result <- KMO(IrlandaImput)
kmo_result
# Obtém as variáveis com KMO abaixo de 0.5
MelhorKMO <- names(kmo_result$MSAi)[kmo_result$MSAi > 0.6]
IrlandaImput <- IrlandaImput[, which(names(IrlandaImput) %in% MelhorKMO)]
cortest.bartlett(IrlandaImput)
data_scaled <- scale(IrlandaImput)
data_scaled %>% glimpse()
dim(data_scaled)
pc1 <- principal(data_scaled, nfactors=10, rotate="none")
valores <- round(pc1$values,3)
valores
length(valores[valores > 1])
plot(pc1$values, type = "b", main = "Scree plot for Irland dataset",
xlab = "Number of PC", ylab = "Eigenvalue")
pc11 <- principal(data_scaled, nfactors = 12, rotate = "none")
pc11$loadings
round(pc11$communality,2)
pc11r <- principal(data_scaled, nfactors= 12, rotate="varimax")
pc11r$loadings
round(pc12r$communality,2)
# RC1 - Psicólogo do estudante
# RC4 - Dedicação do estudante
# RC2 - Notas/ Dificuldades dos estudantes
# RC3 - Preocupação com o mercado de trabalho
# RC7 - Suporte que o estudante recebe
pc7 <- principal(data_scaled, nfactors = 7, rotate = "none")
pc7$loadings
round(pc12$communality,2)
pc7r <- principal(data_scaled, nfactors= 7, rotate="varimax")
pc7r$loadings
round(pc12r$communality,2)
# RC1 - Vida Social do Aluno
# RC2 - Competências académicas do estudante
# RC3 - Informação que o estudante possui
# RC4 - Motivação do estudante
# RC5 - Condições socioeconomicas do estudante
pc7sc <- principal(data_scaled, nfactors = 13, rotate = "varimax", scores = TRUE)
round(pc7sc$scores,3)
mean(pc7sc$scores[,1])
sd(pc7sc$scores[,1])
IrlandaImput$SociaLife <- pc7sc$scores[,2]
IrlandaImput$Knowledge <- pc7sc$scores[,3]
IrlandaImput$Information <- pc7sc$scores[,4]
IrlandaImput$Motivation <- pc7sc$scores[,1]
IrlandaImput$socioeconomic <- pc7sc$scores[,6]
dim(IrlandaImput)
IrlandaImput[,44:48]
IrlandaImput <- cor(IrlandaImput[,44:48])
par(oma = c(2, 2, 2, 2))   # space rounf the graph
corrplot.mixed(IrlandaImput,
order = "hclust",
tl.pos = "lt",
upper = "ellipse")
pacman::p_load(
"sjstats", "plotrix", "skimr",
"txtplot", "cluster", "tidyverse",
"caret", "factoextra", "mclust", "htmlTable",
"readr", "naniar", "here", "modeest",
"psych", "corrplot", "haven", "kableExtra",
"haven", "dplyr" , "magrittr", "mice"
)
options(repr.plot.width=6, repr.plot.height=6)
IrlandaImput <- read_rds("IrlandaImput.rds")
colnames(IrlandaImput)
# Por algum motivo, a variável GRADE faz com que o teste KMO dê erro
# Aqui serão apagadas todas as variáveis que, ou podem ser substituidas, ou não tem valor nenhum
Apagar <- c("HISCED", "MISCED", "GRADE", "REPEAT", "ATTLNACT", "FISCED", "DISCLIMA", "IMMIG", "ICTSCH", "JOYREADP", "HISEI")
IrlandaImput <- IrlandaImput[, -which(names(IrlandaImput) %in% Apagar)]
CorrIrlandaImput <- cor(IrlandaImput)
corrplot(CorrIrlandaImput)
#IrlandaImput matrix
round(CorrIrlandaImput, 3)
kmo_result <- KMO(IrlandaImput)
kmo_result
# Obtém as variáveis com KMO abaixo de 0.5
MelhorKMO <- names(kmo_result$MSAi)[kmo_result$MSAi > 0.6]
IrlandaImput <- IrlandaImput[, which(names(IrlandaImput) %in% MelhorKMO)]
cortest.bartlett(IrlandaImput)
data_scaled <- scale(IrlandaImput)
data_scaled %>% glimpse()
dim(data_scaled)
pc1 <- principal(data_scaled, nfactors=10, rotate="none")
valores <- round(pc1$values,3)
valores
length(valores[valores > 1])
plot(pc1$values, type = "b", main = "Scree plot for Irland dataset",
xlab = "Number of PC", ylab = "Eigenvalue")
pc11 <- principal(data_scaled, nfactors = 12, rotate = "none")
pc11$loadings
round(pc11$communality,2)
pc11r <- principal(data_scaled, nfactors= 12, rotate="varimax")
pc11r$loadings
round(pc12r$communality,2)
# RC1 - Psicólogo do estudante
# RC4 - Dedicação do estudante
# RC2 - Notas/ Dificuldades dos estudantes
# RC3 - Preocupação com o mercado de trabalho
# RC7 - Suporte que o estudante recebe
pc7 <- principal(data_scaled, nfactors = 7, rotate = "none")
pc7$loadings
round(pc12$communality,2)
pc7r <- principal(data_scaled, nfactors= 7, rotate="varimax")
pc7r$loadings
round(pc12r$communality,2)
# RC1 - Vida Social do Aluno
# RC2 - Competências académicas do estudante
# RC3 - Informação que o estudante possui
# RC4 - Motivação do estudante
# RC5 - Condições socioeconomicas do estudante
pc7sc <- principal(data_scaled, nfactors = 13, rotate = "varimax", scores = TRUE)
round(pc7sc$scores,3)
mean(pc7sc$scores[,1])
sd(pc7sc$scores[,1])
IrlandaImput$SociaLife <- pc7sc$scores[,2]
IrlandaImput$Knowledge <- pc7sc$scores[,3]
IrlandaImput$Information <- pc7sc$scores[,4]
IrlandaImput$Motivation <- pc7sc$scores[,1]
IrlandaImput$socioeconomic <- pc7sc$scores[,6]
dim(IrlandaImput)
IrlandaImput[,44:48]
corr <- cor(IrlandaImput[,44:48])
par(oma = c(2, 2, 2, 2))   # space rounf the graph
corrplot.mixed(corr,
order = "hclust",
tl.pos = "lt",
upper = "ellipse")
pc_dist <- dist(IrlandaImput[,44:48])
hclust  <- hclust(pc_dist, method='ward.D2')
plot(hclust, hang=-1, labels=FALSE)
# 5 ou 7
groups.k5 <- cutree(hclust, k=7)
rect.hclust(hclust, k=7, border="red")
pc_dist <- dist(IrlandaImput[,44:48])
hclust  <- hclust(pc_dist, method='ward.D2')
plot(hclust, hang=-1, labels=FALSE)
groups.k5 <- cutree(hclust, k=6)
rect.hclust(hclust, k=6, border="red")
plot(silhouette(groups.k5, pc_dist))
pc_dist <- dist(IrlandaImput[,44:48])
hclust  <- hclust(pc_dist, method='complete')
plot(hclust, hang=-1, labels=FALSE)
# 5 ou 7
groups.k5_c <- cutree(hclust, k=5)
rect.hclust(hclust, k=5, border="red")
pc_dist <- dist(IrlandaImput[,44:48])
hclust  <- hclust(pc_dist, method='complete')
plot(hclust, hang=-1, labels=FALSE)
groups.k5_c <- cutree(hclust, k=3)
rect.hclust(hclust, k=3, border="red")
plot(silhouette(groups.k5_c, pc_dist))
pc_dist <- dist(IrlandaImput[,44:48])
hclust  <- hclust(pc_dist, method='ward.D2')
plot(hclust, hang=-1, labels=FALSE)
groups.k5 <- cutree(hclust, k=2)
rect.hclust(hclust, k=2, border="red")
plot(silhouette(groups.k5, pc_dist))
pc_dist <- dist(IrlandaImput[,44:48])
hclust  <- hclust(pc_dist, method='ward.D2')
plot(hclust, hang=-1, labels=FALSE)
groups.k5 <- cutree(hclust, k=3)
rect.hclust(hclust, k=3, border="red")
plot(silhouette(groups.k5, pc_dist))
pc_dist <- dist(IrlandaImput[,44:48])
hclust  <- hclust(pc_dist, method='ward.D2')
plot(hclust, hang=-1, labels=FALSE)
groups.k5 <- cutree(hclust, k=4)
rect.hclust(hclust, k=4, border="red")
plot(silhouette(groups.k5, pc_dist))
pc_dist <- dist(IrlandaImput[,44:48])
hclust  <- hclust(pc_dist, method='ward.D2')
plot(hclust, hang=-1, labels=FALSE)
groups.k5 <- cutree(hclust, k=5)
rect.hclust(hclust, k=5, border="red")
plot(silhouette(groups.k5, pc_dist))
pc_dist <- dist(IrlandaImput[,44:48])
hclust  <- hclust(pc_dist, method='ward.D2')
plot(hclust, hang=-1, labels=FALSE)
groups.k5 <- cutree(hclust, k=6)
rect.hclust(hclust, k=6, border="red")
plot(silhouette(groups.k5, pc_dist))
pc_dist <- dist(IrlandaImput[,44:48])
hclust  <- hclust(pc_dist, method='ward.D2')
plot(hclust, hang=-1, labels=FALSE)
groups.k5 <- cutree(hclust, k=3)
rect.hclust(hclust, k=3, border="red")
plot(silhouette(groups.k5, pc_dist))
pc_dist <- dist(IrlandaImput[,44:48])
hclust  <- hclust(pc_dist, method='complete')
plot(hclust, hang=-1, labels=FALSE)
groups.k5_c <- cutree(hclust, k=3)
rect.hclust(hclust, k=3, border="red")
plot(silhouette(groups.k5_c, pc_dist))
table(groups.k5,groups.k5_c)
# K-Means: number of clusters
wssplot <- function(xx, nc=15, seed=1234){
wss <- (nrow(xx)-1)*sum(apply(xx,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(xx, centers=i)$withinss)}
plot(1:nc, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")}
wssplot(IrlandaImput[,44:48], nc=10)
#K-means cluster com K=6
kmeans.k6 <- kmeans(IrlandaImput[,44:48], 4, nstart=100)
IrlandaImput = IrlandaImput %>% mutate(cluster = kmeans.k6$cluster)
table(groups.k5, IrlandaImput$cluster)
#Barplot of average score in each principal component within each cluster
barplot(colMeans(subset(IrlandaImput,cluster==1)[,44:48]),main= "Cluster 1 - Average score in each principal component")
barplot(colMeans(subset(IrlandaImput,cluster==2)[,44:48]),main= "Cluster 2 - Average score in each principal component")
barplot(colMeans(subset(IrlandaImput,cluster==3)[,44:48]),main= "Cluster 3 - Average score in each principal component")
barplot(colMeans(subset(IrlandaImput,cluster==4)[,44:48]),main= "Cluster 4 - Average score in each principal component")
barplot(colMeans(subset(IrlandaImput,cluster==5)[,44:48]),main= "Cluster 4 - Average score in each principal component")
#Barplot of average score in each principal component within each cluster
barplot(colMeans(subset(IrlandaImput,cluster==1)[,44:48]),main= "Cluster 1 - Average score in each principal component")
barplot(colMeans(subset(IrlandaImput,cluster==2)[,44:48]),main= "Cluster 2 - Average score in each principal component")
barplot(colMeans(subset(IrlandaImput,cluster==3)[,44:48]),main= "Cluster 3 - Average score in each principal component")
barplot(colMeans(subset(IrlandaImput,cluster==4)[,44:48]),main= "Cluster 4 - Average score in each principal component")
# barplot(colMeans(subset(IrlandaImput,cluster==5)[,44:48]),main= "Cluster 4 - Average score in each principal component")
pacman::p_load(
"sjstats", "plotrix", "skimr",
"txtplot", "cluster", "tidyverse",
"caret", "factoextra", "mclust", "htmlTable",
"readr", "naniar", "here", "modeest",
"psych", "corrplot", "haven", "kableExtra",
"haven", "dplyr" , "magrittr", "mice"
)
options(repr.plot.width=6, repr.plot.height=6)
IrlandaNoImput <- read_rds("IrlandaNoImput.rds")
colnames(IrlandaNoImput)
# Por algum motivo, a variável GRADE faz com que o teste KMO dê erro
# Aqui serão apagadas todas as variáveis que, ou podem ser substituidas, ou não tem valor nenhum
Apagar <- c("HISCED", "MISCED", "GRADE", "REPEAT", "ATTLNACT", "FISCED", "DISCLIMA", "IMMIG", "ICTSCH", "JOYREADP", "HISEI")
IrlandaNoImput <- IrlandaNoImput[, -which(names(IrlandaNoImput) %in% Apagar)]
CorrIrlandaNoImput <- cor(IrlandaNoImput)
corrplot(CorrIrlandaNoImput)
#IrlandaNoImput matrix
round(CorrIrlandaNoImput, 3)
kmo_result <- KMO(IrlandaNoImput)
kmo_result
# Obtém as variáveis com KMO abaixo de 0.5
MelhorKMO <- names(kmo_result$MSAi)[kmo_result$MSAi > 0.6]
IrlandaNoImput <- IrlandaNoImput[, which(names(IrlandaNoImput) %in% MelhorKMO)]
cortest.bartlett(IrlandaNoImput)
data_scaled <- scale(IrlandaNoImput)
data_scaled %>% glimpse()
dim(data_scaled)
pc1 <- principal(data_scaled, nfactors=10, rotate="none")
valores <- round(pc1$values,3)
valores
length(valores[valores > 1])
plot(pc1$values, type = "b", main = "Scree plot for Irland dataset",
xlab = "Number of PC", ylab = "Eigenvalue")
pc11 <- principal(data_scaled, nfactors = 12, rotate = "none")
pc11$loadings
round(pc11$communality,2)
pc11r <- principal(data_scaled, nfactors= 12, rotate="varimax")
pc11r$loadings
round(pc12r$communality,2)
# RC1 - Psicólogo do estudante
# RC4 - Dedicação do estudante
# RC2 - Notas/ Dificuldades dos estudantes
# RC3 - Preocupação com o mercado de trabalho
# RC7 - Suporte que o estudante recebe
pc7 <- principal(data_scaled, nfactors = 7, rotate = "none")
pc7$loadings
round(pc12$communality,2)
pc7r <- principal(data_scaled, nfactors= 7, rotate="varimax")
pc7r$loadings
round(pc12r$communality,2)
# RC1 - Vida Social do Aluno
# RC2 - Competências académicas do estudante
# RC3 - Informação que o estudante possui
# RC4 - Motivação do estudante
# RC5 - Condições socioeconomicas do estudante
pc7sc <- principal(data_scaled, nfactors = 13, rotate = "varimax", scores = TRUE)
round(pc7sc$scores,3)
mean(pc7sc$scores[,1])
sd(pc7sc$scores[,1])
IrlandaNoImput$SociaLife <- pc7sc$scores[,2]
IrlandaNoImput$Knowledge <- pc7sc$scores[,3]
IrlandaNoImput$Information <- pc7sc$scores[,4]
IrlandaNoImput$Motivation <- pc7sc$scores[,1]
IrlandaNoImput$socioeconomic <- pc7sc$scores[,6]
dim(IrlandaNoImput)
IrlandaNoImput[,44:48]
corr <- cor(IrlandaNoImput[,44:48])
par(oma = c(2, 2, 2, 2))   # space rounf the graph
corrplot.mixed(corr,
order = "hclust",
tl.pos = "lt",
upper = "ellipse")
pc_dist <- dist(IrlandaNoImput[,44:48])
hclust  <- hclust(pc_dist, method='ward.D2')
plot(hclust, hang=-1, labels=FALSE)
groups.k5 <- cutree(hclust, k=3)
rect.hclust(hclust, k=3, border="red")
plot(silhouette(groups.k5, pc_dist))
pc_dist <- dist(IrlandaNoImput[,44:48])
hclust  <- hclust(pc_dist, method='complete')
plot(hclust, hang=-1, labels=FALSE)
groups.k5_c <- cutree(hclust, k=3)
rect.hclust(hclust, k=3, border="red")
plot(silhouette(groups.k5_c, pc_dist))
table(groups.k5,groups.k5_c)
# K-Means: number of clusters
wssplot <- function(xx, nc=15, seed=1234){
wss <- (nrow(xx)-1)*sum(apply(xx,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(xx, centers=i)$withinss)}
plot(1:nc, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")}
wssplot(IrlandaNoImput[,44:48], nc=10)
#K-means cluster com K=6
kmeans.k6 <- kmeans(IrlandaNoImput[,44:48], 4, nstart=100)
IrlandaNoImput = IrlandaNoImput %>% mutate(cluster = kmeans.k6$cluster)
table(groups.k5, IrlandaNoImput$cluster)
pacman::p_load(
"sjstats", "plotrix", "skimr",
"txtplot", "cluster", "tidyverse",
"caret", "factoextra", "mclust", "htmlTable",
"readr", "naniar", "here", "modeest",
"psych", "corrplot", "haven", "kableExtra",
"haven", "dplyr" , "magrittr", "mice"
)
options(repr.plot.width=6, repr.plot.height=6)
IrlandaNoImput <- read_rds("IrlandaNoImput.rds")
colnames(IrlandaNoImput)
# Por algum motivo, a variável GRADE faz com que o teste KMO dê erro
# Aqui serão apagadas todas as variáveis que, ou podem ser substituidas, ou não tem valor nenhum
Apagar <- c("GRADE")
IrlandaNoImput <- IrlandaNoImput[, -which(names(IrlandaNoImput) %in% Apagar)]
CorrIrlandaNoImput <- cor(IrlandaNoImput)
corrplot(CorrIrlandaNoImput)
#IrlandaNoImput matrix
round(CorrIrlandaNoImput, 3)
kmo_result <- KMO(IrlandaNoImput)
kmo_result
# Obtém as variáveis com KMO abaixo de 0.5
MelhorKMO <- names(kmo_result$MSAi)[kmo_result$MSAi > 0.6]
IrlandaNoImput <- IrlandaNoImput[, which(names(IrlandaNoImput) %in% MelhorKMO)]
cortest.bartlett(IrlandaNoImput)
data_scaled <- scale(IrlandaNoImput)
data_scaled %>% glimpse()
dim(data_scaled)
pc1 <- principal(data_scaled, nfactors=10, rotate="none")
valores <- round(pc1$values,3)
valores
length(valores[valores > 1])
plot(pc1$values, type = "b", main = "Scree plot for Irland dataset",
xlab = "Number of PC", ylab = "Eigenvalue")
pc11 <- principal(data_scaled, nfactors = 12, rotate = "none")
pc11$loadings
round(pc11$communality,2)
pc11r <- principal(data_scaled, nfactors= 12, rotate="varimax")
pc11r$loadings
round(pc12r$communality,2)
# RC1 - Psicólogo do estudante
# RC4 - Dedicação do estudante
# RC2 - Notas/ Dificuldades dos estudantes
# RC3 - Preocupação com o mercado de trabalho
# RC7 - Suporte que o estudante recebe
pc7 <- principal(data_scaled, nfactors = 7, rotate = "none")
pc7$loadings
round(pc12$communality,2)
pc7r <- principal(data_scaled, nfactors= 7, rotate="varimax")
pc7r$loadings
round(pc12r$communality,2)
# RC1 - Vida Social do Aluno
# RC2 - Competências académicas do estudante
# RC3 - Informação que o estudante possui
# RC4 - Motivação do estudante
# RC5 - Condições socioeconomicas do estudante
pacman::p_load(
"sjstats", "plotrix", "skimr",
"txtplot", "cluster", "tidyverse",
"caret", "factoextra", "mclust", "htmlTable",
"readr", "naniar", "here", "modeest",
"psych", "corrplot", "haven", "kableExtra",
"haven", "dplyr" , "magrittr", "mice"
)
options(repr.plot.width=6, repr.plot.height=6)
IrlandaNoImput <- read_rds("IrlandaNoImput.rds")
colnames(IrlandaNoImput)
# Por algum motivo, a variável GRADE faz com que o teste KMO dê erro
# Aqui serão apagadas todas as variáveis que, ou podem ser substituidas, ou não tem valor nenhum
Apagar <- c("GRADE", "SOCONPA", "PRESUPP", "BMMJ1", "GFOFAIL", "WORKMAST", "COMPETE")
IrlandaNoImput <- IrlandaNoImput[, -which(names(IrlandaNoImput) %in% Apagar)]
CorrIrlandaNoImput <- cor(IrlandaNoImput)
corrplot(CorrIrlandaNoImput)
#IrlandaNoImput matrix
round(CorrIrlandaNoImput, 3)
kmo_result <- KMO(IrlandaNoImput)
kmo_result
# Obtém as variáveis com KMO abaixo de 0.5
MelhorKMO <- names(kmo_result$MSAi)[kmo_result$MSAi > 0.6]
IrlandaNoImput <- IrlandaNoImput[, which(names(IrlandaNoImput) %in% MelhorKMO)]
cortest.bartlett(IrlandaNoImput)
data_scaled <- scale(IrlandaNoImput)
data_scaled %>% glimpse()
dim(data_scaled)
pc1 <- principal(data_scaled, nfactors=10, rotate="none")
valores <- round(pc1$values,3)
valores
length(valores[valores > 1])
plot(pc1$values, type = "b", main = "Scree plot for Irland dataset",
xlab = "Number of PC", ylab = "Eigenvalue")
pc11 <- principal(data_scaled, nfactors = 12, rotate = "none")
pc11$loadings
round(pc11$communality,2)
pc11r <- principal(data_scaled, nfactors= 12, rotate="varimax")
pc11r$loadings
round(pc12r$communality,2)
# RC1 - Psicólogo do estudante
# RC4 - Dedicação do estudante
# RC2 - Notas/ Dificuldades dos estudantes
# RC3 - Preocupação com o mercado de trabalho
# RC7 - Suporte que o estudante recebe
pc7 <- principal(data_scaled, nfactors = 7, rotate = "none")
pc7$loadings
round(pc12$communality,2)
pc7r <- principal(data_scaled, nfactors= 7, rotate="varimax")
pc7r$loadings
round(pc12r$communality,2)
pc11r <- principal(data_scaled, nfactors= 12, rotate="varimax")
pc11r$loadings
round(pc12r$communality,2)
# Por algum motivo, a variável GRADE faz com que o teste KMO dê erro
# Aqui serão apagadas todas as variáveis que, ou podem ser substituidas, ou não tem valor nenhum
Apagar <- c("GRADE", "SOCONPA", "PRESUPP", "BMMJ1", "GFOFAIL", "WORKMAST", "COMPETE")
IrlandaNoImput <- IrlandaNoImput[, -which(names(IrlandaNoImput) %in% Apagar)]
CorrIrlandaNoImput <- cor(IrlandaNoImput)
corrplot(CorrIrlandaNoImput)
pacman::p_load(
"sjstats", "plotrix", "skimr",
"txtplot", "cluster", "tidyverse",
"caret", "factoextra", "mclust", "htmlTable",
"readr", "naniar", "here", "modeest",
"psych", "corrplot", "haven", "kableExtra",
"haven", "dplyr" , "magrittr", "mice"
)
options(repr.plot.width=6, repr.plot.height=6)
IrlandaNoImput <- read_rds("IrlandaNoImput.rds")
colnames(IrlandaNoImput)
# Por algum motivo, a variável GRADE faz com que o teste KMO dê erro
# Aqui serão apagadas todas as variáveis que, ou podem ser substituidas, ou não tem valor nenhum
Apagar <- c("GRADE", "SOCONPA", "PRESUPP", "BMMJ1", "GFOFAIL", "WORKMAST", "COMPETE")
IrlandaNoImput <- IrlandaNoImput[, -which(names(IrlandaNoImput) %in% Apagar)]
CorrIrlandaNoImput <- cor(IrlandaNoImput)
corrplot(CorrIrlandaNoImput)
#IrlandaNoImput matrix
round(CorrIrlandaNoImput, 3)
kmo_result <- KMO(IrlandaNoImput)
kmo_result
pacman::p_load(
"sjstats", "plotrix", "skimr",
"txtplot", "cluster", "tidyverse",
"caret", "factoextra", "mclust", "htmlTable",
"readr", "naniar", "here", "modeest",
"psych", "corrplot", "haven", "kableExtra",
"haven", "dplyr" , "magrittr", "mice"
)
options(repr.plot.width=6, repr.plot.height=6)
IrlandaNoImput <- read_rds("IrlandaNoImput.rds")
colnames(IrlandaNoImput)
# Por algum motivo, a variável GRADE faz com que o teste KMO dê erro
# Aqui serão apagadas todas as variáveis que, ou podem ser substituidas, ou não tem valor nenhum
Apagar <- c("GRADE", "SOCONPA", "PRESUPP", "BMMJ1", "GFOFAIL", "WORKMAST", "COMPETE")
IrlandaNoImput <- IrlandaNoImput[, -which(names(IrlandaNoImput) %in% Apagar)]
CorrIrlandaNoImput <- cor(IrlandaNoImput)
corrplot(CorrIrlandaNoImput)
#IrlandaNoImput matrix
round(CorrIrlandaNoImput, 3)
kmo_result <- KMO(IrlandaNoImput)
kmo_result
# Obtém as variáveis com KMO abaixo de 0.5
MelhorKMO <- names(kmo_result$MSAi)[kmo_result$MSAi > 0.6]
IrlandaNoImput <- IrlandaNoImput[, which(names(IrlandaNoImput) %in% MelhorKMO)]
cortest.bartlett(IrlandaNoImput)
data_scaled <- scale(IrlandaNoImput)
data_scaled %>% glimpse()
dim(data_scaled)
